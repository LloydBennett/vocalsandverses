{"version":3,"sources":["main.js","modules/carousel.js","modules/gallery-carousel.js","modules/modal.js","modules/nav-menu.js","modules/page-transition.js"],"names":[],"mappingsjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"script.js","sourcesContent":["// Helper functions\n\n/* This loop through an array of Dom\nelements and remove the className that is passed in\nwhen envoked. jQuery normally takes care of this issue */\n\nfunction removeClassFromNodeList(nodeList, className){\n  if(typeof className === \"object\") {\n    nodeList.forEach(function(element){\n      for(var index = 0; index < className.length; index++) {\n        element.classList.remove(className[index]);\n      }\n    });\n  } else {\n    nodeList.forEach(function(element){\n      element.classList.remove(className);\n    });\n  }\n}\n\n/* This also loops through an array of Dom\nelements and attaches specified eventhandler to each\nto it. */\n\nfunction bindEventToAll(nodeList, eventHandler){\n  nodeList.forEach(function(element, index){\n    element.onclick = eventHandler;\n  });\n}\n\n// End of Helper functions\n\n\nfunction setupVideoModal(){\n  var modal = document.querySelectorAll('[data-modal=\"video-modal\"]'),\n      modalVideo;\n\n  modal.forEach(function(element, index) {\n    new Modal(element, function(isOpen, target) {\n      if (isOpen) {\n        element.querySelector('video').play();\n      } else {\n        element.querySelector('video').load();\n      }\n    });\n  });\n\n}\n/*\n  This function sets the communication between the modal class\n  and the carousel class. The Gallery modal has a combination of both\n  carousel and modal functionality.\n*/\nfunction setupGalleryModal() {\n  var modal = document.querySelectorAll('[data-modal=\"gallery-modal\"]');\n  var carouselEl = document.querySelectorAll('[data-carousel=\"gallery\"]');\n  var carousel;\n  var carouselArray = [];\n\n  carouselEl.forEach(function(element){\n    carousel = new GalleryCarousel(element);\n    carouselArray.push(carousel);\n  });\n\n  modal.forEach(function(element, index) {\n    new Modal(element, function(isOpen, target) {\n      if(isOpen) {\n        carouselArray[index].moveViaLink(target.getAttribute('data-index'));\n      }\n    });\n  });\n}\n\nfunction setupDefaultCarousels() {\n  document.querySelectorAll('[data-carousel=\"default\"]').forEach(function(el) {\n    new Carousel(el);\n  });\n}\n\n(function() {\n\n\t//initialises all functions that need to be called\n\tfunction init(){\n    setupVideoModal();\n    setupGalleryModal();\n    setupDefaultCarousels();\n\t}\n\n\twindow.onload = function() {\n\t\tinit();\n\t};\n\n}());\n","function Carousel(parentWrapper, options) {\n  var defaults = {\n    autoplay: false,\n    delay: 10000\n  };\n  this.domElements;\n  options = options ? options : {};\n  this.options = Object.assign(defaults, options);\n  this.counter = 0;\n  this.isAnimating = false;\n  this.timer;\n\n  this.cacheDomElements = function() {\n    this.domElements = {\n      frame: parentWrapper.querySelector('[data-carousel-frame]'),\n      nextController: parentWrapper.querySelectorAll('[data-carousel-controller-next]'),\n      prevController: parentWrapper.querySelectorAll('[data-carousel-controller-prev]'),\n      tabs: parentWrapper.querySelectorAll('[data-carousel-tab]'),\n      progressTabs: parentWrapper.querySelectorAll('[data-carousel-tab=\"progress\"]'),\n      slides: parentWrapper.querySelectorAll('[data-carousel-slides]'),\n      wrapper: parentWrapper.querySelector('[data-carousel-wrapper]')\n    }\n    /* we need to set the width of the carousel so that\n      the carousel wrapper moves in relation the width of\n      the slides. Slides are 100% of the carousel width\n    */\n    //this.setCarouselWidth();\n  }\n\n  this.init();\n}\n\nCarousel.prototype = {\n  init: function(){\n    this.cacheDomElements();\n    this.addEvents();\n    this.move();\n    this.setSlideTimeLimit();\n  },\n  addEvents: function(){\n    var _this = this;\n\n    if(this.domElements.nextController.length) {\n      this.carouselController(this.domElements.nextController, 1);\n    }\n\n    if(this.domElements.prevController.length) {\n      this.carouselController(this.domElements.prevController, -1);\n    }\n\n    if(this.domElements.tabs.length) {\n      this.domElements.progressTabs.forEach(function(element, index) {\n        element.onclick = function(){\n          _this.moveViaLink(index);\n          if(_this.options.autoplay) {\n            clearInterval(_this.timer);\n            _this.setSlideTimeLimit();\n          }\n        }\n      });\n    }\n    /* This helps us to have a responsive carousel */\n    // window.addEventListener('resize', function() {\n    //   this.setCarouselWidth();\n    // }.bind(_this));\n  },\n  carouselController: function(nodeList, direction){\n    bindEventToAll(nodeList, function() {\n      if(!this.isAnimating) {\n        this.move(direction);\n        if(this.options.autoplay) {\n          clearInterval(this.timer);\n          this.setSlideTimeLimit();\n        }\n      }\n    }.bind(this));\n  },\n  setSlideTimeLimit: function(){\n    if(this.options.autoplay) {\n      this.timer = setInterval(function(){\n        if(!this.isAnimating) this.move(1);\n      }.bind(this), this.options.delay);\n    }\n  },\n  checkCounterLimit: function(n) {\n    /* We check to see whether the counter (n) is\n    within the scope of how many slides there are */\n    var slidesMaxLength = this.domElements.slides.length - 1;\n\n    if (this.counter > slidesMaxLength || this.counter < 0) {\n      this.counter = (n == 1) ? 0 : slidesMaxLength;\n    }\n  },\n  getCarouselWidth: function() {\n    return this.domElements.slides[this.counter].getBoundingClientRect().width;\n  },\n  moveViaLink: function(index) {\n    /* This is a separate move method especially for\n      carousel tabs */\n    this.counter = index;\n    this.checkCounterLimit(index);\n    this.animateSlides();\n  },\n  move: function(direction) {\n    if (!direction) direction = 0;\n\n    this.counter += direction;\n    this.checkCounterLimit(direction);\n    this.animateSlides();\n  },\n  animateSlides: function() {\n    var slideWidth = this.getCarouselWidth();\n    var translateAmount = -slideWidth * this.counter;\n    this.isAnimating = true;\n    this.updateProgressTab();\n\n    this.domElements.wrapper.style.transform = \"translateX(\" + translateAmount + \"px)\";\n\n    this.domElements.wrapper.addEventListener('webkitTransitionEnd', function(){\n      this.isAnimating = false;\n    }.bind(this));\n  },\n  updateProgressTab: function() {\n    if(this.domElements.progressTabs.length !== 0) {\n      removeClassFromNodeList(this.domElements.progressTabs, 'active');\n      this.domElements.progressTabs[this.counter].classList.add('active');\n    }\n  }\n};\n","function GalleryCarousel(base, options) {\n  this.base = base;\n  Carousel.call(this, this.base, options);\n}\n\nGalleryCarousel.prototype = Object.create(Carousel.prototype);\nGalleryCarousel.prototype.constructor = GalleryCarousel;\n\nGalleryCarousel.prototype.animateSlides = function(){\n  var counterImage = this.domElements.slides[this.counter].querySelector('img');\n  var naturalWidth = counterImage.naturalWidth;\n  var naturalHeight = counterImage.naturalHeight;\n\n  this.domElements.frame.style.width = naturalWidth + \"px\";\n  this.domElements.frame.style.height = naturalHeight + \"px\";\n  // setTimeout(function(){\n  // }, 6000);\n  //removeClassFromNodeList(this.domElements.slides, 'show-slide');\n\n  // setTimeout(function(){\n  //   this.domElements.slides[this.counter].classList.add('show-slide');\n  // }, 3000);\n\n  //this.domElements.frame.style.width = slideWidth + \"px\";\n  this.domElements.wrapper.addEventListener('webkitTransitionEnd', function(){\n    this.isAnimating = false;\n  }.bind(this));\n}\n","function Modal(selector, openHandler) {\n  this.openModal = false;\n  this.domElements;\n  this.base = typeof selector === \"string\" ? document.querySelector(selector) : selector;\n  this.openHandler = openHandler;\n  this.cacheDomElements = function() {\n    this.domElements = {\n      trigger: document.querySelectorAll('[data-trigger-modal]'),\n      modalOverlay: document.querySelector('[data-modal-overlay]'),\n      body: document.querySelector('body')\n    };\n  }\n  this.init();\n}\n\nModal.prototype = {\n  init: function() {\n    this.cacheDomElements();\n    this.addEvents();\n  },\n  addEvents: function() {\n    var _this = this;\n    bindEventToAll(this.domElements.trigger, function() {\n      _this.toggleModal.call(_this, event);\n    });\n  },\n  toggleModal: function(event){\n    event.stopPropagation();\n\n    if(!this.openModal) {\n      var target = (event.target.getAttribute('data-trigger-modal')) ?\n      event.target : event.target.parentNode;\n      var modalName = target.getAttribute('data-trigger-modal');\n\n      this.domElements.modalOverlay.classList.add('visible');\n      this.domElements.body.classList.add('no-scrolling');\n      this.base.classList.add('open');\n      this.openModal = true;\n\n    } else {\n      this.domElements.modalOverlay.classList.remove('visible');\n      this.domElements.body.classList.remove('no-scrolling');\n      this.base.classList.remove('open');\n      this.openModal = false;\n    }\n\n    if(this.openHandler && typeof this.openHandler === \"function\") this.openHandler(this.openModal, target);\n  },\n  setModalWidth: function(width){\n    this.base.style.width = width + \"px\";\n  }\n}\n","function NavigationMenu(options){\n    this.options = options;\n    this.init();\n}\n\nNavigationMenu.prototype = {\n  init: function(){\n      this.addEvents();\n  },\n  addEvents: function(){\n      this.options.menuTrigger.onclick = this.toggleMenu.bind(this);\n  },\n  toggleMenu: function(){\n      this.options.menu.classList.toggle('menu-open');\n      this.options.menuTrigger.classList.toggle('menu-open');\n      this.options.body.classList.toggle('menu-open');\n      this.animateNavLinks();\n  },\n  animateNavLinks: function(){\n   var delay;\n   this.options.navLinks.forEach(function(link, index){\n       delay = 80 * index;\n       setTimeout(function(){\n           link.classList.toggle('appear');\n       }, delay);\n   });\n  }\n};","//module for page transitions\nfunction PageTransition($pageLinks, callback) {\n    this.pageLinks = $pageLinks;\n    this.init(this.pageLinks);\n    //this.callback = callback || function(){};\n}\n\nPageTransition.prototype = {\n    init: function() {\n        if(typeof this.pageLinks == 'object') {\n            this.addEvent(this.pageLinks);\n        } else {\n            throw new Error('The argument you have parsed needs to be of type object');\n        }\n    },\n    addEvent: function($link) {\n        var _self = this;\n        for(var index = 0; index < $link.length; index++) {\n            $link[index].addEventListener('click', function(event) {\n                event.preventDefault();\n                event.stopPropagation();\n                var url = event.target.getAttribute('href');\n                _self.pageRequest(url);\n            });\n        }\n    },\n    pageRequest: function(url) {\n        this.animatePage();\n        var xhr = new XMLHttpRequest(),\n            newElement,\n            requestedContent,\n            requestedPageTitle,\n            $pageWrapper = document.getElementById('page-wrapper'),\n            $pageTitle = document.querySelector('head title');\n        xhr.onreadystatechange = function() {\n            if(this.readyState == 4 && this.status == 200) {\n                newElement = document.createElement('div');\n                newElement.innerHTML = this.response;\n                console.log(this.response);\n                /*requestedPageTitle = newElement.querySelector('head title');\n                requestedContent = newElement.querySelector('#page-wrapper');\n                $pageTitle = requestedPageTitle;\n                $pageWrapper.innerHTML = requestedContent.innerHTML;*/\n            }\n        };\n        xhr.open('GET', url + '#page-wrapper');\n        xhr.send();\n\n        /*\n         if the current page is not the same as the requested page\n         then change the url to the request page and\n         add it to the window history.\n         */\n        if(url != window.location) {\n            window.history.pushState({path: url},'',url);\n            //this.callback();\n        }\n    },\n    animatePage: function(){\n        console.log('Page is animating');\n        //toggleMenu();\n    }\n};"]}